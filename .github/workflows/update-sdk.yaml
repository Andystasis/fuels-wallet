name: Update Fuels Package Version

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  update-version:
    runs-on: buildjet-4vcpu-ubuntu-2204

    steps:
      - uses: actions/checkout@v3
      - uses: FuelLabs/github-actions/setups/node@master

      - name: Check versions
        id: check_versions
        run: |
          cd packages/update-sdk
          pnpm check-versions

      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code || echo "::set-output name=changes::true"

      - name: Create new branch and commit changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          latest_version=${{ steps.check_versions.outputs.latest_version }}
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          branch_name="update-sdk-$latest_version"

          # Check if branch already exists
          if git rev-parse --verify $branch_name; then
            echo "Branch $branch_name already exists, checking out."
            git checkout $branch_name
          else
            echo "Creating new branch $branch_name."
            git checkout -b $branch_name
          fi

          git add .
          git commit -m "chore: update sdk to $latest_version"
          git push origin $branch_name

      - name: Create Pull Request
        if: steps.git-check.outputs.changes == 'true'
        run: |
          latest_version=${{ steps.check_versions.outputs.latest_version }}
          branch_name="update-sdk-$latest_version"
          pr_title="chore: update sdk to $latest_version"
          pr_body="This PR updates the SDK package to version [$latest_version](https://github.com/FuelLabs/fuels-ts/releases/tag/v$latest_version)."
          gh pr create \
            --title "$pr_title" \
            --body "$pr_body" \
            --base master \
            --head $branch_name
